services:
  example-docker-project-client-react-vite:
    image: example-docker-project-client-react-vite
    build:
      context: ./client-react/
      dockerfile: ./../ClientReactDockerfile
    init: true
    networks:
      - frontend
    ports:
      - 5173:5173
  example-docker-project-client-react-nginx:
    labels:
      shipyard.primary-route: true
      shipyard.route: '/'
    image: example-docker-project-client-react-nginx
    build:
      context: ./client-react/
      dockerfile: ./../ClientReactNginxDockerfile
    init: true
    networks:
      - frontend
    ports:
      - 80:8080
    restart: unless-stopped
  example-docker-project-api-node:
    labels:
      shipyard.route: '/api/node'
      shipyard.route.rewrite: true
    image: example-docker-project-api-node
    build:
      context: ./api-node/
      dockerfile: ./../ApiNodeDockerfile
    init: true
    depends_on:
      - example-docker-project-db
    environment:
      - DATABASE_URL=postgres://postgres:foobarbaz@db:5432/postgres
    networks:
      - frontend
      - backend
    ports:
      - 3000:3000
    restart: unless-stopped
  example-docker-project-api-golang:
    labels:
      shipyard.route: '/api/golang'
      shipyard.route.rewrite: true
    image: example-docker-project-api-golang
    build:
      context: ./api-golang/
      dockerfile: ./../ApiGolangDockerfile
    init: true
    depends_on:
      - example-docker-project-db
    environment:
      - DATABASE_URL=postgres://postgres:foobarbaz@db:5432/postgres
      - COMPOSE_CONVERT_WINDOWS_PATHS=1
    networks:
      - frontend
      - backend
    ports:
      - 8080:8080
    restart: unless-stopped
  example-docker-project-db:
    image: postgres:15.1-alpine
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=foobarbaz
    networks:
      - backend
    ports:
      - 5432:5432
volumes:
  pgdata:
networks:
  frontend:
  backend: